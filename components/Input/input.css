.input-container {
  position: relative;
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xxs);
  width: 100%;
  max-width: 320px;
}

.input-container label {
  font-size: var(--text-md);
  font-weight: 500;
}

.input-container input::placeholder {
  font-size: var(--text-sm);
}
.input-container input {
  padding: var(--spacing-xxs);
  border: 1px solid rgba(var(--text-color), 0.7);
  border-radius: var(--radius-base);
  width: 100%;
  margin-bottom: var(--spacing-lg);
}

.input-container .input-error {
  position: absolute;
  bottom: 0;
  display: none;
  font-size: var(--text-xs);
  color: rgba(var(--error-color), 1);
}

/* Focus state */
.input-container input:focus {
  outline: none;
  box-shadow: 0 0 0 1px rgba(var(--text-color), 0.3);
  border-color: rgba(var(--text-color), 0.4);
}

/* Invalid state */
.input-container.input-invalid .input-error {
  display: block;
}

.input-container.input-invalid input {
  border-color: rgba(var(--error-color), 0.4);
}
.input-container.input-invalid input {
  border-color: rgba(var(--error-color), 1);
}

.input-container.input-invalid input:focus {
  box-shadow: 0 0 0 1px rgba(var(--error-color), 0.5);
}

/* Valid state */
.input-container.input-valid .input-error {
  display: none;
}

.input-container.input-valid input {
  border-color: rgba(var(--success-color), 0.4);
}
.input-container.input-valid input {
  border-color: rgba(var(--success-color), 1);
}

.input-container.input-valid input:focus {
  box-shadow: 0 0 0 1px rgba(var(--success-color), 0.5);
}

/* Disabled state */
.input-container:has(input:disabled) :is(label, input) {
  opacity: 0.3;
}
